apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-service
  namespace: messenger
  labels:
    app: message-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-service
  template:
    metadata:
      labels:
        app: message-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      imagePullSecrets:
      - name: gcr-json-key
      containers:
      - name: message-service
        image: gcr.io/teleport-450320/message-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 3001
          name: websocket
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: message-service-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: message-service-config
              key: PORT
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: message-service-config
              key: MONGODB_URI
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: message-service
  namespace: messenger
spec:
  selector:
    app: message-service
  ports:
    - name: http
      port: 3000
      targetPort: http
    - name: websocket
      port: 3001
      targetPort: websocket
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: message-service-ingress
  namespace: messenger
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "message-service"
spec:
  rules:
  - host: message.messenger.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: message-service
            port:
              name: http
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: message-service
            port:
              name: websocket
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: message-service-hpa
  namespace: messenger
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: message-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 