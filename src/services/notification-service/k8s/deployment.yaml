apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: messenger
  labels:
    app: notification-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: /metrics
    spec:
      containers:
      - name: notification-service
        image: local/notification-service:latest
        imagePullPolicy: Never
        ports:
        - name: http
          containerPort: 3000
        - name: ws
          containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: WS_PORT
          value: "3001"
        - name: KAFKA_BROKERS
          valueFrom:
            secretKeyRef:
              name: kafka-secrets
              key: KAFKA_BROKERS
        - name: KAFKA_SSL
          value: "false"
        - name: KAFKA_SASL
          value: "true"
        - name: KAFKA_SASL_MECHANISM
          valueFrom:
            secretKeyRef:
              name: kafka-secrets
              key: KAFKA_SASL_MECHANISM
        - name: KAFKA_SASL_USERNAME
          valueFrom:
            secretKeyRef:
              name: kafka-secrets
              key: KAFKA_SASL_USERNAME
        - name: KAFKA_SASL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kafka-secrets
              key: KAFKA_SASL_PASSWORD
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: uri
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: JWT_SECRET
        - name: JWT_EXPIRES_IN
          value: 24h
        - name: CORS_ORIGIN
          value: '*'
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi 